Date: 2015-02-10 15:49:35

----

User: timgauthier

----

Text: Okay, so I bashed my head a lot, asked a ton of questions of ##php and come up with something that appears to work in my testing so far.

### Template
My Template is 'lookup.php' and has the following code:

```
<? 
if (!empty($formatted_address)) :
	go($smallestDistance['url'] . '?lat=' . esc($lookup_lat) . '&lng=' . esc($lookup_lng) . '&addr=' . esc($formatted_address));
else :
	go('erdbeerfelder');
endif ;
?>
```
This allows the template to only redirect if they enter an address to a field, if they do not then they get to see the root page of the fields area, this is functionally good for my users as it leads them to finding a field either by typing the address, or navigating via a menu.


### Controller
```
<?php
return function($site, $pages, $page) {

	// function to geocode address, it will return false if unable to geocode address
	function geocode($address){
 
    // url encode the address
    $address = urlencode($address);
     
    // google map geocode api url
    $url = "http://maps.google.com/maps/api/geocode/json?sensor=false&address={$address}Â®ion=de";
 
    // get the json response
    $resp_json = file_get_contents($url);
     
    // decode the json
    $resp = json_decode($resp_json, true);
 
    // response status will be 'OK', if able to geocode given address 
    if($resp['status']='OK'){
 
        // get the important data
        $lati = $resp['results'][0]['geometry']['location']['lat'];
        $longi = $resp['results'][0]['geometry']['location']['lng'];
        $formatted_address = $resp['results'][0]['formatted_address'];
         
        // verify if data is complete
        if($lati && $longi && $formatted_address){
         
            // put the data in the array
            $data_arr = array();            
             
            array_push(
                $data_arr, 
                    $lati, 
                    $longi, 
                    $formatted_address
                );
             
            return $data_arr;
             
        }else{
            return false;
        }
         
    }else{
        return false;
    }
}
	/**
 * Calculates the great-circle distance between two points, with
 * the Haversine formula.
 * @param float $latitudeFrom Latitude of start point in [deg decimal]
 * @param float $longitudeFrom Longitude of start point in [deg decimal]
 * @param float $latitudeTo Latitude of target point in [deg decimal]
 * @param float $longitudeTo Longitude of target point in [deg decimal]
 * @param float $earthRadius Mean earth radius in [m]
 * @return float Distance between points in [m] (same as earthRadius)
 */
	function haversineGreatCircleDistance(
	  $latitudeFrom, $longitudeFrom, $latitudeTo, $longitudeTo, $earthRadius = 6371)
	{
	  // convert from degrees to radians
	  $latFrom = deg2rad($latitudeFrom);
	  $lonFrom = deg2rad($longitudeFrom);
	  $latTo = deg2rad($latitudeTo);
	  $lonTo = deg2rad($longitudeTo);
	 
	  $latDelta = $latTo - $latFrom;
	  $lonDelta = $lonTo - $lonFrom;
	 
	  $angle = 2 * asin(sqrt(pow(sin($latDelta / 2), 2) +
	    cos($latFrom) * cos($latTo) * pow(sin($lonDelta / 2), 2)));
	  return $angle * $earthRadius;
	}
	// get latitude, longitude and formatted address
    $data_arr = geocode($_POST['address']);
 
    // if able to geocode the address
    if($data_arr){
         
        $lookup_lat = $data_arr[0];
        $lookup_lng = $data_arr[1];
        $formatted_address = $data_arr[2];

    }else{
        // echo "No map found.";
    }


	foreach ($site->find('erdbeerfelder')->grandchildren()->children() as $field) :
	 
	  $field_lat = $field->location()->lat();
	  $field_lng = $field->location()->lng();
	 
	  $distance = haversineGreatCircleDistance($lookup_lat, $lookup_lng, $field_lat, $field_lng);
	 
	  if (!isset($smallestDistance) || $distance < $smallestDistance['distance']) {
	    $smallestDistance = [
	      "distance" => $distance,
	      "url" => html($field->url()),
	      "title" => html($field->title()),
	    ];
	  };
	  
	endforeach;
	 


  return array(
  	'formatted_address' => $formatted_address,
    'lookup_lat' => $lookup_lat,
    'lookup_lng' => $lookup_lng,
    'smallestDistance' => $smallestDistance, 
  );

};
?>
```

This is possibly the messier part of this solution, it has 2 functions and a foreach, it returns some extra information that I may put into my templates later, such as how far away a field is. I copy and pasted the Haversine from (link: http://stackoverflow.com/questions/14750275/haversine-formula-with-php text: this stack overflow answer). The code for geocoding the address comes from (link: https://www.codeofaninja.com/2014/06/google-maps-geocoding-example-php.html text: codeofaninja.com) after some google searching to find that tutorial.


### Snippet
```
<?php if($page->intendedTemplate() == 'field') : ?>

<form action="http://maps.google.com/maps" method="get" target="_blank">
  <input type="text" name="saddr" <?php if($addr = get('addr')) { ?>value='<? echo esc($addr) ?>'<? } else { ?>placeholder='Enter your Address'<? } ?>/>
  <input type="hidden" name="daddr" value="<?php echo $page->location(); ?>" />
  <input type="submit" value="Get Directions" />
</form>

<?php else : ?>

<form action="<?php echo url('lookup') ?>" method="post">
  <input type='text' name='address' placeholder='Enter your Address' />
  <input type='submit' value='Feldsuche' />
</form>

<? endif ?>
```
I wanted my users to be able to look up the closest location from other pages, so i created this snippet, it also exists on the page of each location, giving them the ability to get directions, it carries the address forward with a get() *If there are any possible security implications please let me know!* If the user doesn't have their address already entered then they are able to put it in at this point. My goal was to not collect any user information and store it in any way, to keep privacy as high as possible.


### Locations, GPS, etc

I am using the Geolocations plugin for the panel back-end, this lets my client put locations in via a google map and dragging the pin. Many of their locations don't actually have an address as they are literally farmers fields. This is excellent because it bridges the gap for people being able to find the locations easily!