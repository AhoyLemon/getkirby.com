Title: modal tag

----

Date: 2015-01-06 15:26:15

----

User: mydarktime

----

Solved: 0

----

Text: I needed to get an modal tag, because I wanted to get some stuff just not diplayed at the start. This is my first attempt to work this out. the complete tag could be called like

(modal: on button content text: You will be in danger! number: 1 width: a width you defined in your css)

```
<?php

kirbytext::$tags['modal'] = array(
		'attr' => array(
		'type', 'text', 'number', 'width'
	),
	'html' => function($tag) {

			// setting the type of your button corresponding to your stylesheet
			$type = $tag->attr('type', '');

			// setting the default content
			$text = $tag->attr('text', 'There is no text left inside.');

			// setting the number of the modal relative to the content of your page. there should not be the same number twice!
			$number = $tag->attr('number', '1');

			// set default modal width by refering to any css class you want to
			$width = $tag->attr('width', '');

			// builds modal html output
			$html  = '<a href="#'. $number .'" class="'. $type .'">' . $tag->attr('modal') . '</a>';
			$html .= '<div id="'. $number .'" class="modalDialog">';
			$html .= '<div class="'. $width .'">';
			$html .= '<a href="#close" title="Close" class="modalClose">';
			$html .= '<span class="fa-stack fa-1x">';
			$html .= '<i class="fa fa-circle fa-stack-2x"></i>';
			$html .= '<i class="fa fa-times fa-stack-1x fa-inverse"></i>';
			$html .= '</span>';
			$html .= '</a>';
			$html .= '<p class="modalText">'. $text .'</p>';
			$html .= '</div>';
			$html .= '</div>';
		
			return $html;
		
	}

);
?>
```

and the css

```
/* styling my modal */

.modalDialog {
	position: fixed;
	font-family: Arial, Helvetica, sans-serif;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	background: rgba(0,0,0,0.8);
	z-index: 99999;
	opacity:0;
	-webkit-transition: opacity 400ms ease-in;
	-moz-transition: opacity 400ms ease-in;
	transition: opacity 400ms ease-in;
	pointer-events: none;
}

.modalDialog:target {
	opacity:1;
	pointer-events: auto;
}

.modalDialog > div {
	position: relative;
	margin: 10% auto;
	padding: 1em 1em 1em 1em;
	border-radius: 1em;
	background: #fff;
}

.modalClose {
	float: right;
}

.modalText {
	margin-top: 2em;
}
```

You can see it live here: (link: http://schulcomputer.org/grafische-gestaltung popup: yes)

The modal will need font awesome installed to get the close icon shown as intended!