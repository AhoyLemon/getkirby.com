Date: 2015-02-07 22:07:12

----

User: krisasa

----

Text: Hello  Captain Suleiman!

Pretty **huge** build man!

I am running a lot lighter gulp, mainly because we dont use it for deploying and i hate stuff like jade so i dont compile that much. 

I might have a little upgrade for you. 

This is our simple build. Be aware that some of it is quite old and things might work differently nowdays.

```
var gulp = require('gulp'),
	sass = require('gulp-sass'),
	autoprefixer = require('gulp-autoprefixer'),
	concat = require('gulp-concat'),
	plumber = require('gulp-plumber'),
	jshint = require('gulp-jshint'),
	gutil = require('gulp-util'),
	stylish = require('jshint-stylish'),
	minifyCSS = require('gulp-minify-css'),
	connect = require('gulp-connect-php'),
	browserSync = require('browser-sync'),
	sourcemaps = require('gulp-sourcemaps');


var reload      = browserSync.reload;


var onError = function (err) {  
  gutil.beep();
  console.log(err);
};



gulp.task('connect', function(cb) {
    connect.server({ base: 'kirby', port: 8010}, function() {
    	console.log('PHP server initialized, starting BrowserSync');
    	cb();
    });
});




  gulp.task('script', function() {
	  gulp.src('js/*.js')
	  .pipe(plumber(onError))
	  .pipe(jshint())
	  .pipe(jshint.reporter(stylish))
	  .pipe(jshint.reporter('fail'))
	  .pipe(plumber.stop())
	  .pipe(concat('main.js')) // spojeni vseho do main.js
	  .pipe(gulp.dest('kirby/assets/js'));
	  browserSync.notify("Compiling, please wait!");
  });

 
  gulp.task('sass', function() {
		gulp.src('sass/main.scss')
		.pipe(plumber(onError))
		.pipe(sourcemaps.init())
		.pipe(sass({}))
		.pipe(sourcemaps.write())
		.pipe(plumber.stop())
		.pipe(autoprefixer())
		.pipe(gulp.dest('kirby/assets/css'))
		.pipe(reload({stream:true}));
	});



gulp.task('browser-sync',['connect'], function() {
    browserSync({
      proxy: '127.0.0.1:8010',
      port: 8080,
      open: true,
      browser: "google chrome canary",
      notify: false
    }, function (err, bs) {
    	 if (err) { console.log(err); }
		    if (!err) {
		        console.log("BrowserSync is ready!");
		    }
	});
});


gulp.task('default', ['browser-sync', 'sass', 'script'], function () {
	gulp.watch(['js/*.js'], ['script', reload]);
	gulp.watch(['sass/main.scss'], ['sass']);
	gulp.watch(['kirby/*.php','site/**/*.php'], [reload]);
});
```

The cream for you will be mainly connect-php with browser-sync.

So browser sync can be run in few modes one of wich is proxy mode. So what you do is you ride connect server on one port and have browsersync running as proxy to that port.

You need latest versions (from your gulpfile it seems that browsersync you are using is older version, update they have added some fancy gui and shiny stuff).
    "browser-sync": "^2.0.0-rc8" 

There is also catch! You need gulp-connect-php version 0.0.5 which is not yet on NPM (probably because author forgot too push it there, i posted issue) but its on github (and surely will be on npm in few days). For now just install the 0.0.3 on npm (coz of dependencies) and switch the index.js  [here](https://github.com/micahblu/gulp-connect-php/blob/master/index.js).

```
gulp.task('connect', function(cb) {
    connect.server({ base: 'kirby', port: 8010}, function() {
    	console.log('PHP server initialized, starting BrowserSync');
    	cb();
    });
});
```
The cb is callback you need to run it in order for gulp to know webserver has started. There is explanation in [gulp docs](https://github.com/gulpjs/gulp/blob/master/docs/API.md);

```
gulp.task('browser-sync',['connect'], function() {
    browserSync({
      proxy: '127.0.0.1:8010',
      port: 8080,
      open: true,
      browser: "google chrome canary",
      notify: false
    }, function (err, bs) {
    	 if (err) { console.log(err); }
		    if (!err) {
		        console.log("BrowserSync is ready!");
		    }
	});
});
```
Here it means that you run browser-sync task after connect task is finished. Little important detail  proxy: '127.0.0.1:8010' dont put localhost:8010 it will break links (browser sync proxy is switching every link on page with the right port). Of course port numbers dont matter but you must have the same in connect and proxy (8010 in example).

Thats basically it.


I also noticed you dont use sass source maps. Use those motherfuckers, they are awesome. With chrome you than see sass in inspector and with tiny setup mapping files from servers to your hard drive, you can then edit sass through inspector. This was huge speed boost for us. It might not seem like it but switching between browser and editor and searching for that sass variable takes lot of time.

Hopefuly it is somehow useful.