Date: 2015-01-29 14:30:06

----

User: sulcalibur

----

Text: ```
var gulp        = require('gulp'),
    jade        = require('gulp-jade'),
    prettify    = require('gulp-prettify'),
    sass        = require('gulp-sass'),
    minifyCSS   = require('gulp-minify-css'),
    imagemin    = require('gulp-imagemin'),
    autoprefix  = require('gulp-autoprefixer'),
    notify      = require('gulp-notify'),
    uncss       = require('gulp-uncss'),
    markdown    = require('gulp-markdown'),
    uglify      = require('gulp-uglify'),
    purge       = require('gulp-css-purge'),
    concat      = require('gulp-concat'),
    bower       = require('gulp-bower'),
    browserSync = require('browser-sync'),
    clone       = require('git-clone'),
    clean       = require('rimraf'),
    connect     = require('gulp-connect-php'),
    git         = require('gulp-git'),
    ftp         = require('gulp-ftp'),
    watch       = require('gulp-watch')
    ;

    module.exports = gulp;

    var config = {
      sassPath: 'project/assets/styles/',
      bowerDir: 'bower_components'
    }

  // Markdown Tasks
  gulp.task('markdown', function() {
    gulp.src('project/assets/templates/includes/*md')
    .pipe(markdown())
    .pipe(gulp.dest('project/assets/templates/includes/md'));
  });

  // Image Tasks
  gulp.task('images', function() {
    gulp.src('project/assets/images/*')
    .pipe(imagemin())
    .pipe(gulp.dest('build/assets/img'))
  });

  // FA Font Icons
  gulp.task('icons', function() {     return gulp.src(config.bowerDir + '/fontawesome/fonts/**.*')     .pipe(gulp.dest('build/assets/fonts'));   });

  // Markup Tasks
  gulp.task('markup', function() {
    gulp.src('project/*.jade')
    .pipe(jade())
    .pipe(prettify({indent_size: 2}))
    .pipe(gulp.dest('build/'));
  });

  // JavaScript Tasks
  gulp.task('scriptspre', function(){
    gulp.src('bower_components/modernizr/modernizr.js')
    gulp.src('bower_components/jquery/dist/jquery.js')
    .pipe(gulp.dest('build/assets/js/'))
  });

  // JavaScript Tasks
    gulp.task('scriptspost', function(){
    gulp.src('project/assets/scripts/*.js')
    .pipe(concat('jspost.js'))
    .pipe(gulp.dest('build/assets/js/'))
  });

  // Styles Tasks
  gulp.task('styles', function() {
    gulp.src('project/assets/styles/*.scss')
    .pipe(sass({
      style: 'compress'
    }))
    .pipe(gulp.dest('build/assets/css/'))
  });

  // Styles Extra
  gulp.task('stylesextra', function() {
    return gulp.src('build/css/style.css')
    .pipe(uncss({
        html: ['build/index.html', 'build/blogpost.html']
    }))
    .pipe(minifyCSS({keepBreaks:true}))
    .pipe(gulp.dest('build/assets/css/'));
  });

  gulp.task('browser-sync', function () {
    var files = [
    'build/**/*'
    ];
    browserSync.init(files, {
      server: {
        baseDir: './build'
      }
    });
  });

  // Clean up
  gulp.task('clean', function () {

  })

  // PHP Server
  gulp.task('connect', function() {
      connect.server();
  });
  gulp.task('php', function(){
    gulp.src('build/**/*.php')
      // .pipe(connect.reload());
  });

  // FTP
  gulp.task('upload', function () {
    return gulp.src('build/')
      .pipe(ftp({
        host: '*******.com',
        user: '*******',
        pass: '******'
      }));
  });

  // Watch Task
  gulp.task('watch', function() {
    gulp.watch('project/**/*.jade', ['markup']);
    gulp.watch('project/assets/styles/**/*.scss', ['styles']);
    gulp.watch('project/assets/scripts/**/*.js', ['scriptspre','scriptspost']);
    gulp.watch(['build/**/*.php'], ['php']);
    gulp.watch(['build/assets/img/*'], ['images']);
  });

  // Watch Task
  gulp.task('kirbywatch', function() {
    gulp.watch('project/assets/styles/**/*.scss', ['styles']);
    gulp.watch('project/assets/scripts/**/*.js', ['scriptspre','scriptspost']);
    gulp.watch(['build/**/*.php'], ['php']);
  });

  // Kirby Setup
  gulp.task('kirbysetup',
  ['kirbyinstall','markup','styles','stylesextra','scriptspre','scriptspost','connect','kirbywatch']);

  // Kirby Work task to be run with `gulp`
  gulp.task('kirbywork', ['styles','scriptspre','scriptspost','watch']);

  // Default task to be run with `gulp`
  gulp.task('default', ['markup','styles','scriptspre','scriptspost','watch','browser-sync']);

  // Build task to be run with `gulp`
  gulp.task('build', ['markup','styles','stylesextra','scriptspre','scriptspost','watch','browser-sync']);
```

This is my Gulp file. I won't lie this is probably really sloppy but I'm just starting to use Gulp after using Codekit. 

The main question I have is I'm fine working with my setup design and coding the basic HTML using Jade, Markdown and SCSS and I like that all of the chaos is within my project folder then out it spits all of the clean awesomeness into my /build directory. Also since Browser Sync seems to only work with the HTML/CSS pages I've resorted to using VirtualhostX to refresh my PHP local domains.

I'm working on my CSS/SCSS in my normal project directories still but editing all the Kirby stuff from within the /build directory.

So, back to my main question. If I am doing this in a horrific way and any one has better examples of how to go about this, please please feel free to point me in the right direction. Many thanks.